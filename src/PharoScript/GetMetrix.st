| metrixNestJs metrixLoopBackJs working workingNestJs workingLoopBackJs errorsCsvPath|metrixNestJs := OrderedCollection new.metrixLoopBackJs := OrderedCollection new.
errorList := OrderedCollection new.workingNestJs := './modeles/nestjs' asFileReference.workingLoopBackJs := './modeles/loopbackjs' asFileReference.[ (workingNestJs allChildren select: [ :each | each basename endsWith: '.json' ])    do: [ :jsonFile |         | fileName modele donnees |        fileName := jsonFile path at:7.        [ modele := jsonFile readStreamDo: [ :stream | FamixTypeScriptModel new importFromJSONStream: stream ].          donnees := Main new main: modele.          metrixNestJs add: donnees. ]        on: Error        do: [ :e | 
	    errorList add: {jsonFile basename. e}.            Transcript show: 'Error processing ', fileName, ': ', e messageText; cr ] ] ]     ensure: [         "Générer les CSV avec les résultats"        CSVFile new generateCSVForData: 'nestjsResults.csv' data: metrixNestJs. ].[ (workingLoopBackJs allChildren select: [ :each | each basename endsWith: '.json' ])    do: [ :jsonFile |         | fileName modele donnees|        fileName := jsonFile path at:7.        [ modele := jsonFile readStreamDo: [ :stream | FamixTypeScriptModel new importFromJSONStream: stream ].          donnees := Main new main: modele.          metrixLoopBackJs add: donnees. ]        on: Error        do: [ :e | 
	    errorList add: {jsonFile basename. e}.            Transcript show: 'Error processing ', fileName, ': ', e messageText; cr ] ] ]     ensure: [         CSVFile new generateCSVForData: 'loopbackResults.csv' data: metrixLoopBackJs. 
	CSVFile new generateCSVForError: 'pharoError.csv' data: errorList.        Smalltalk snapshot: false andQuit: true        ].